{"version":3,"sources":["Search.js","Result.js","Results.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["Search","searchInput","search","className","type","placeholder","onChange","onKeyPress","Result","result","openDetail","onClick","imdbID","src","Poster","Title","Results","results","map","Detail","selected","closeDetail","Year","imdbRating","alt","Plot","App","useState","s","state","setState","apiurl","movies","filters","filter","movie","Object","entries","every","key","value","includes","filterMovies","id","title","genre","country","e","target","prevState","axios","then","data","console","log","label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffae6a3e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\nfunction Search({ searchInput, search }) {\r\nreturn (\r\n\t<div className=\"search-bar\">\r\n\t<input\r\n\t\ttype=\"text\"\r\n\t\tplaceholder=\"Search Movie...\"\r\n\t\tclassName=\"search\"\r\n\t\tonChange={searchInput}\r\n\t\tonKeyPress={search}\r\n\t/>\r\n\t</div>\r\n);\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nfunction Result({ result, openDetail }) {\r\nreturn (\r\n\t<div className=\"result\" onClick=\r\n\t\t{() => openDetail(result.imdbID)}>\r\n\t<img src={result.Poster} />\r\n\t<h3>{result.Title}</h3>\r\n\t</div>\r\n);\r\n}\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport Result from \"./Result\";\r\n\r\nfunction Results({ results, openDetail }) {\r\nreturn (\r\n\t<section className=\"results\">\r\n\t{typeof results != \"undefined\" ? (\r\n\t\tresults.map((result) => (\r\n\t\t<Result key={result.imdbID} result\r\n\t\t\t={result} openDetail={openDetail} />\r\n\t\t))\r\n\t) : (\r\n\t\t<div className=\"not-found\">\r\n\t\t<h2>Sorry.. Movie not found in the database.</h2>\r\n\t\t<h2>\r\n\t\t\tTry checking the name you input\r\n\t\t\tor search for another movie.\r\n\t\t</h2>\r\n\t\t</div>\r\n\t)}\r\n\t</section>\r\n);\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\n\r\nfunction Detail({ selected, closeDetail }) {\r\nreturn (\r\n\t<section className=\"detail\">\r\n\t<div className=\"content\">\r\n\t\t<h2>{selected.Title}</h2>\r\n\t\t<span>{selected.Year}</span>\r\n\t\t<p className=\"rating\">Rating: {selected.imdbRating}</p>\r\n\r\n\t\t<div className=\"about\">\r\n\t\t<img src={selected.Poster} alt=\"\" />\r\n\t\t\t\r\n<p>{selected.Plot}</p>\r\n\r\n\t\t</div>\r\n\t\t<button className=\"close\" onClick={closeDetail}>\r\n\t\tClose\r\n\t\t</button>\r\n\t</div>\r\n\t</section>\r\n);\r\n}\r\n\r\nexport default Detail;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Search from \"./Search\";\r\nimport Results from \"./Results\";\r\nimport Detail from \"./Detail\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\nconst [state, setState] = useState({\r\n\ts: \"sherlock\",\r\n\tresults: [],\r\n\tselected: {},\r\n});\r\n\r\nconst apiurl = \" http://www.omdbapi.com/?i=tt3896198&apikey=9d19a1dc\";\r\n\r\nconst searchInput = (e) => {\r\n\tlet s = e.target.value;\r\n\r\n\tsetState((prevState) => {\r\n\treturn { ...prevState, s: s };\r\n\t});\r\n};\r\n\r\nconst search = (e) => {\r\n\tif (e.key === \"Enter\") {\r\n\taxios(apiurl + \"&s=\" + state.s).then(({ data }) => {\r\n\t\tlet results = data.Search;\r\n\r\n\t\tconsole.log(results);\r\n\r\n\t\tsetState((prevState) => {\r\n\t\treturn { ...prevState, results: results };\r\n\t\t});\r\n\t});\r\n\t}\r\n};\r\n\r\nconst openDetail = (id) => {\r\n\taxios(apiurl + \"&i=\" + id).then(({ data }) => {\r\n\tlet result = data;\r\n\r\n\tsetState((prevState) => {\r\n\t\treturn { ...prevState, selected: result };\r\n\t});\r\n\t});\r\n};\r\n\r\nconst closeDetail = () => {\r\n\tsetState((prevState) => {\r\n\treturn { ...prevState, selected: {} };\r\n\t});\r\n};\r\nconst filters = {\r\n  genre: 'action',\r\n  country: 'ireland'\r\n};\r\n  \r\nconst movies = [\r\n  {\r\n    id: 1,\r\n    title: \"movie1\",\r\n    genre: [\"action\", \"sci-fi\"],\r\n    country: [\"usa\", \"uk\"]\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"movie2\",\r\n    genre: [\"action\", \"comedy\"],\r\n    country: [\"usa\", \"ireland\"]\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"movie3\",\r\n    genre: [\"comedy\", \"romance\"],\r\n    country: [\"ireland\", \"uk\"],\r\n  },\r\n];\r\n\r\nconst filterMovies = (movies, filters) =>\r\n  movies.filter(movie => \r\n    Object.entries(filters).every(([key, value]) => \r\n      movie[key].includes(value)\r\n    )\r\n  )\r\n\r\nconst result = filterMovies(movies, filters);\r\n\r\nreturn (\r\n\t<div className=\"App\">\r\n    <div className=\"nav-top\">\r\n\t<header className=\"App-header\">\r\n\t\t<h1>MovieApp</h1>\r\n\t</header>\r\n  <Search searchInput={searchInput} search={search} />\r\n<p><select onClick=\"filterMovies()\">\r\n  <optgroup label=\"Language\">\r\n  <option>English</option>\r\n  <option>Hindi</option>\r\n  </optgroup>\r\n  <optgroup label=\"Format\">\r\n  <option>2D</option>\r\n  <option>3D</option>\r\n  </optgroup>\r\n</select></p>\r\n</div>\r\n\t<main>\r\n\t\r\n\t\t<Results results={state.results} openDetail={openDetail} />\r\n\r\n\t\t{typeof state.selected.Title != \"undefined\" ? (\r\n\t\t<Detail selected={state.selected} closeDetail={closeDetail} />\r\n\t\t) : (\r\n\t\tfalse\r\n\t\t)}\r\n\t</main>\r\n\t</div>\r\n);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}